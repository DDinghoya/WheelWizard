<components:BaseListView x:Class="CT_MKWII_WPF.Views.Components.StaticListView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:components="clr-namespace:CT_MKWII_WPF.Views.Components"
          xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
          mc:Ignorable="d" x:Name="Root"
          d:DesignHeight="500" d:DesignWidth="300">
    
    <ListView.Resources>
        <Style x:Key="ItemStyleCommon" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="{StaticResource DragItemBackground-Default}"/>
            <Setter Property="Foreground" Value="{StaticResource DragItemAttributes-Default}"/>
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="BorderCommon"  TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="{StaticResource GlobalCornerRadius}"/>
        </Style>
        
        
        <Style x:Key="DefaultItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ItemStyleCommon}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Background="{TemplateBinding Background}"
                                Height="Auto" Style="{StaticResource BorderCommon}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                MouseLeftButtonDown="ListViewItem_PreviewMouseLeftButtonDown"
                                MouseRightButtonUp="ContextMenu_Click" MinHeight="37">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <components:IconLabelButton Text="" IconPack="FontAwesome" IconSize="23"  x:Name="DotsIcon" 
                                                            IconKind="{x:Static icon:PackIconFontAwesomeKind.EllipsisVerticalSolid}"
                                                            VerticalAlignment="Stretch" HorizontalAlignment="Right" 
                                                            HoverColor="{StaticResource DragItemIcon-IndividualHover+ }"
                                                            Click="ContextMenu_Click"
                                                            Color="{StaticResource DragItemIcon-Default}" />
                                
                                <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                      Margin="0,0,20,0"
                                                      Content="{TemplateBinding Content}"
                                                      Columns="{TemplateBinding GridView.ColumnCollection}"/>
                            </Grid>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <!-- you can also do styling based on the ItemObject itself
                            <DataTrigger Binding="{Binding ModName}"  Value="Sample Mod 3">
                                <Setter Property="Visibility" TargetName="DotsIcon" Value="Collapsed"/>
                            </DataTrigger> --> 
                            <DataTrigger Binding="{Binding ItemContextMenu, ElementName=Root}"  Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="DotsIcon" Value="Collapsed"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DragItemBackground-Hover}"/>
                                <Setter Property="Foreground" Value="{StaticResource DragItemAttributes-Hover+}"/>
                                <Setter Property="Color" TargetName="DotsIcon" Value="{StaticResource DragItemIcon-GroupHover+}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource DragItemBackground-Focus}"/>
                                <Setter Property="Foreground" Value="{StaticResource DragItemAttributes-Hover+}"/>
                                <Setter Property="Color" TargetName="DotsIcon" Value="{StaticResource DragItemIcon-GroupHover+}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </ListView.Resources>
    
    <ListView.Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        
            <Setter Property="ItemContainerStyle" Value="{StaticResource  DefaultItemStyle}"/>
        </Style>
    </ListView.Style>
</components:BaseListView>
