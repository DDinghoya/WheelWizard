<UserControl x:Class="CT_MKWII_WPF.Views.Components.MiiBall"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Storyboard x:Key="SpinnerAnimation">
            <DoubleAnimation
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                From="0"
                To="360"
                Duration="0:0:1"
                RepeatBehavior="Forever"/>
        </Storyboard>
    </UserControl.Resources>
    
    <Border x:Name="OuterCircle"
            CornerRadius="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
             Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}"
            Width="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}}" 
            Height="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}}">
        
        <Grid>
            <!-- 
             IMPORTNANT: anything inside the InnerCircle will be clipped to a circle
            If you want to have something outside of this circle, dont put it in this border
            -->
            <Border x:Name="InnerCircle" 
                    CornerRadius="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
                 Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}">
                
                <Border.Clip>
                    <EllipseGeometry x:Name="EllipseGeometry"/>
                </Border.Clip>
                
                <Grid>
                    <!-- 
                        THE SPINNER ICON
                    -->
                    <icon:PackIconFontAwesome Kind="SpinnerSolid" HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Width="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                                      Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}" 
                                              Height="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                                      Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}">
                        <icon:PackIconFontAwesome.RenderTransform>
                            <!-- the center of this should be half the size of the icon itself (current 0.5, so that's why 0.25)-->
                            <RotateTransform CenterX="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                                      Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.25}" 
                                             CenterY="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                                      Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.25}"/>
                        </icon:PackIconFontAwesome.RenderTransform>
                        <icon:PackIconFontAwesome.Style>
                            <Style TargetType="icon:PackIconFontAwesome">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconDefault-Foreground}"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MiiImage, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Name="SpinnerStoryboard" Storyboard="{StaticResource SpinnerAnimation}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="SpinnerStoryboard"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                        
                                    <DataTrigger Binding="{Binding Variant,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Light">
                                        <Setter Property="Foreground" Value="{StaticResource MiiIconLight-Foreground}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </icon:PackIconFontAwesome.Style>
                    </icon:PackIconFontAwesome>
                    
                    <!-- 
                        THE USER ICON WHEN THERE IS NO IMAGE
                    -->
                    <icon:PackIconFontAwesome Kind="UserSolid" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                              Width="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                         Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.7}" 
                                              Height="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
                         Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.7}">
                        <icon:PackIconFontAwesome.Style>
                            <Style TargetType="icon:PackIconFontAwesome">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconDefault-Foreground}"/>
                           
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MiiImage,
                                     RelativeSource={RelativeSource AncestorType=UserControl}}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    
                                    <!-- If the image loaded successfully, we also dont want this user icon to show, since 
                                        the image will show in this case-->
                                    <DataTrigger Binding="{Binding ImageLoadingSuccess,
                                     RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    
                                    <DataTrigger Binding="{Binding Variant,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Light">
                                        <Setter Property="Foreground" Value="{StaticResource MiiIconLight-Foreground}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </icon:PackIconFontAwesome.Style>
                    </icon:PackIconFontAwesome>
                    
                     
                    <!-- 
                        THE USER's MII IMAGE WHEN THERE IS AN IMAGE
                    -->
                    <Image Source="{Binding MiiImage,
                     RelativeSource={RelativeSource AncestorType=UserControl}}" Stretch="Uniform">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Visible"/>
                                
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ImageLoadingSuccess,
                                     RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
             
                 
                    <!-- 
                        THE BACKGROUND COLOR OF THE BALL
                    -->
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="{StaticResource MiiIconDefault-Background}"/> 
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Variant,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Light">
                                <Setter Property="Background" Value="{StaticResource MiiIconLight-Background}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                   
                </Border.Style>
            </Border>
            <!-- END OF INNER CIRCLE
            
            BEGINNING OF EVERYTHING OUTSIDE OF THAT -->
            <Border x:Name="StateIcon" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    CornerRadius="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
                    Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}">
                    <!-- I know, 0.5 for the corner radius is way to much, but to much is not a problem -->
                    
               <Border.Style>
                   <Style TargetType="Border">
                       <Setter Property="BorderBrush" Value="{StaticResource MiiIconDefault-Border}"/>
                       <Style.Triggers>
                           <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="First">
                               <Setter Property="BorderBrush" Value="{StaticResource MiiFirstPlace-Border}"/>
                           </DataTrigger>
                           <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Second">
                               <Setter Property="BorderBrush" Value="{StaticResource MiiSecondPlace-Border}"/>
                           </DataTrigger>
                           <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Third">
                               <Setter Property="BorderBrush" Value="{StaticResource MiiThirdPlace-Border}"/>
                           </DataTrigger>
                           
                           <DataTrigger Binding="{Binding PlayerState,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Default">
                               <Setter Property="Visibility" Value="Collapsed"/>
                           </DataTrigger>
                           
                           <DataTrigger Binding="{Binding PlayerState,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Red">
                               <Setter Property="Background" Value="{StaticResource MiiStateRed}"/> 
                           </DataTrigger>
                           <DataTrigger Binding="{Binding PlayerState,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Online">
                               <Setter Property="Background" Value="{StaticResource MiiStateCyan}"/> 
                           </DataTrigger>
                           
                       </Style.Triggers>
                   </Style>
               
               </Border.Style>
            </Border>
            
            <Border x:Name="BadgeIconInner" HorizontalAlignment="Left" VerticalAlignment="Top"
                    CornerRadius="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
                    Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}">
                <!-- I know, 0.5 for the corner radius is way to much, but to much is not a problem -->
                
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="None">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="First">
                                <Setter Property="Background" Value="{StaticResource MiiFirstPlace-BadgeInner}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Second">
                                <Setter Property="Background" Value="{StaticResource MiiSecondPlace-BadgeInner}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Third">
                                <Setter Property="Background" Value="{StaticResource MiiThirdPlace-BadgeInner}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                
            </Border>
            
            <!-- THE BADGE ICON IF THE MII WON -->
           <icon:PackIconFontAwesome Kind="AwardSolid" x:Name="BadgeIconOuter" HorizontalAlignment="Left" VerticalAlignment="Top">
               <icon:PackIconFontAwesome.RenderTransform>
                   <TransformGroup>
                       <RotateTransform Angle="30" /> 
                   </TransformGroup>
               </icon:PackIconFontAwesome.RenderTransform>
               <icon:PackIconFontAwesome.Style>
                   <Style TargetType="icon:PackIconFontAwesome">
                       <Setter Property="Foreground" Value="{StaticResource MiiSecondPlace-BadgeOuter}" />
                       <Style.Triggers>
                           <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="None">
                               <Setter Property="Visibility" Value="Collapsed" />
                           </DataTrigger>
                           <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="First">
                              <Setter Property="Foreground" Value="{StaticResource MiiFirstPlace-BadgeOuter}" />
                          </DataTrigger>
                          <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Second">
                              <Setter Property="Foreground" Value="{StaticResource MiiSecondPlace-BadgeOuter}" />
                          </DataTrigger>
                          <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Third">
                              <Setter Property="Foreground" Value="{StaticResource MiiThirdPlace-BadgeOuter}"/>
                          </DataTrigger>
                      </Style.Triggers>
                   </Style>
               </icon:PackIconFontAwesome.Style>
           </icon:PackIconFontAwesome>
            
        </Grid>
        
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="{StaticResource MiiIconDefault-Border}"/>
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="First">
                        <Setter Property="Background" Value="{StaticResource MiiFirstPlace-Border}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Second">
                        <Setter Property="Background" Value="{StaticResource MiiSecondPlace-Border}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WinPosition,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Third">
                        <Setter Property="Background" Value="{StaticResource MiiThirdPlace-Border}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
    </Border>
</UserControl>
