<UserControl x:Class="CT_MKWII_WPF.Views.Components.MiiBall"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Storyboard x:Key="SpinnerAnimation">
            <DoubleAnimation
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                From="0"
                To="360"
                Duration="0:0:1"
                RepeatBehavior="Forever"/>
        </Storyboard>
    </UserControl.Resources>
    
    <Border x:Name="Border" 
            CornerRadius="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
             Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}"
            Width="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}}" 
            Height="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}}">
        
        <Border.Clip>
            <EllipseGeometry x:Name="EllipseGeometry"/>
        </Border.Clip>
        
        <Grid>
            <icon:PackIconFontAwesome Kind="SpinnerSolid"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Width="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                              Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}" 
                                      Height="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                              Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.5}">
                <icon:PackIconFontAwesome.RenderTransform>
                    <!-- the center of this should be half the size of the icon itself (current 0.5, so that's why 0.25)-->
                    <RotateTransform CenterX="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                              Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.25}" 
                                     CenterY="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                              Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.25}"/>
                </icon:PackIconFontAwesome.RenderTransform>
                <icon:PackIconFontAwesome.Style>
                    <Style TargetType="icon:PackIconFontAwesome">
                        <Setter Property="Foreground" Value="{StaticResource MiiIconDefault-Foreground}"/>
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MiiImage, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="SpinnerStoryboard" Storyboard="{StaticResource SpinnerAnimation}"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="SpinnerStoryboard"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                
                            <DataTrigger Binding="{Binding Color,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Light">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconLight-Foreground}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Online">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconCyan-Foreground}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Red">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconRed-Foreground}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </icon:PackIconFontAwesome.Style>
            </icon:PackIconFontAwesome>
            
            <icon:PackIconFontAwesome Kind="UserSolid"
                                      HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                      Width="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl},
                 Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.8}" 
                                      Height="{Binding Size, RelativeSource={RelativeSource AncestorType=UserControl}, 
                 Converter={StaticResource MultiplierValueConverter}, ConverterParameter=0.8}">
                <icon:PackIconFontAwesome.Style>
                    <Style TargetType="icon:PackIconFontAwesome">
                        <Setter Property="Foreground" Value="{StaticResource MiiIconDefault-Foreground}"/>
                   
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MiiImage,
                             RelativeSource={RelativeSource AncestorType=UserControl}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            
                            <!-- If the image loaded successfully, we also dont want this user icon to show, since 
                                the image will show in this case-->
                            <DataTrigger Binding="{Binding ImageLoadingSuccess,
                             RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            
                            <DataTrigger Binding="{Binding Color,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Light">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconLight-Foreground}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Online">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconCyan-Foreground}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Red">
                                <Setter Property="Foreground" Value="{StaticResource MiiIconRed-Foreground}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </icon:PackIconFontAwesome.Style>
            </icon:PackIconFontAwesome>
            
            <Image Source="{Binding MiiImage,
             RelativeSource={RelativeSource AncestorType=UserControl}}" Stretch="Uniform">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Visible"/>
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ImageLoadingSuccess,
                             RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
     
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="{StaticResource MiiIconDefault-Background}"/> 
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Color,RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Light">
                        <Setter Property="Background" Value="{StaticResource MiiIconLight-Background}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Online">
                        <Setter Property="Background" Value="{StaticResource MiiIconCyan-Background}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Red">
                        <Setter Property="Background" Value="{StaticResource MiiIconRed-Background}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
           
        </Border.Style>
    </Border>
</UserControl>
